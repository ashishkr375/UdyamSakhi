'use client';

import { useState } from 'react';
import { Search, PlayCircle, FileText, ExternalLink } from 'lucide-react';
import { Input } from '@/components/ui/input';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';

interface Tutorial {
  id: string;
  title: string;
  description: string;
  type: 'video' | 'article';
  url: string;
  duration: string;
  category: string;
  tags: string[];
}

const TUTORIAL_DATA: Tutorial[] = [
  {
    id: '1',
    title: 'Getting Started with Business Planning',
    description: 'Learn how to use our AI-powered business planning tools to create a comprehensive plan for your business.',
    type: 'video',
    url: 'https://youtube.com/watch?v=xyz',
    duration: '5:30',
    category: 'Business Planning',
    tags: ['business plan', 'AI assistant', 'getting started'],
  },
  {
    id: '2',
    title: 'Complete Guide to Business Registration',
    description: 'Step-by-step guide to registering your business, including document requirements and processes.',
    type: 'article',
    url: '/tutorials/business-registration-guide',
    duration: '10 min read',
    category: 'Legal & Compliance',
    tags: ['registration', 'legal', 'documents'],
  },
  {
    id: '3',
    title: 'Finding the Right Mentor',
    description: 'Tips on how to choose a mentor and make the most of your mentorship sessions.',
    type: 'video',
    url: 'https://youtube.com/watch?v=abc',
    duration: '7:45',
    category: 'Mentorship',
    tags: ['mentorship', 'guidance', 'networking'],
  },
  {
    id: '4',
    title: 'Understanding Financial Forecasts',
    description: 'Learn how to interpret and use the financial forecasts generated by our AI tools.',
    type: 'article',
    url: '/tutorials/financial-forecasts',
    duration: '15 min read',
    category: 'Finance',
    tags: ['finance', 'forecasting', 'planning'],
  },
  // Add more tutorials as needed
];

export function Tutorials() {
  const [searchQuery, setSearchQuery] = useState('');
  const [activeTab, setActiveTab] = useState<'all' | 'video' | 'article'>('all');

  const filteredTutorials = TUTORIAL_DATA.filter(tutorial => {
    const matchesSearch = 
      tutorial.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
      tutorial.description.toLowerCase().includes(searchQuery.toLowerCase()) ||
      tutorial.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()));
    
    if (activeTab === 'all') return matchesSearch;
    return matchesSearch && tutorial.type === activeTab;
  });

  return (
    <div className="space-y-6">
      <div className="flex flex-col gap-4 md:flex-row md:items-center">
        <div className="relative flex-1">
          <Search className="absolute left-2 top-2.5 h-4 w-4 text-muted-foreground" />
          <Input
            placeholder="Search tutorials..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="pl-8"
          />
        </div>
      </div>

      <Tabs value={activeTab} onValueChange={(value: 'all' | 'video' | 'article') => setActiveTab(value)}>
        <TabsList>
          <TabsTrigger value="all">All Tutorials</TabsTrigger>
          <TabsTrigger value="video">Video Tutorials</TabsTrigger>
          <TabsTrigger value="article">Text Guides</TabsTrigger>
        </TabsList>

        <TabsContent value={activeTab} className="mt-6">
          <div className="grid gap-6 md:grid-cols-2">
            {filteredTutorials.map((tutorial) => (
              <Card key={tutorial.id}>
                <CardHeader>
                  <div className="flex items-start justify-between">
                    <div className="flex items-center gap-4">
                      <div className="rounded-lg bg-primary/10 p-2 text-primary">
                        {tutorial.type === 'video' ? (
                          <PlayCircle className="h-6 w-6" />
                        ) : (
                          <FileText className="h-6 w-6" />
                        )}
                      </div>
                      <div>
                        <CardTitle className="text-lg">{tutorial.title}</CardTitle>
                        <CardDescription>{tutorial.description}</CardDescription>
                      </div>
                    </div>
                  </div>
                </CardHeader>
                <CardContent>
                  <div className="flex flex-wrap gap-2 mb-4">
                    <Badge variant="secondary">{tutorial.category}</Badge>
                    <Badge variant="outline">{tutorial.duration}</Badge>
                    {tutorial.tags.map((tag) => (
                      <Badge key={tag} variant="outline">{tag}</Badge>
                    ))}
                  </div>
                  <Button
                    variant="default"
                    className="w-full"
                    onClick={() => window.open(tutorial.url, '_blank')}
                  >
                    <ExternalLink className="h-4 w-4 mr-2" />
                    {tutorial.type === 'video' ? 'Watch Tutorial' : 'Read Guide'}
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </TabsContent>
      </Tabs>
    </div>
  );
} 